// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Overture::OverturePackageTests::ProductTarget" /* OverturePackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_58 /* Build configuration list for PBXAggregateTarget "OverturePackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_61 /* PBXTargetDependency */,
			);
			name = OverturePackageTests;
			productName = OverturePackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_39 /* Chain.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Chain.swift */; };
		OBJ_40 /* Compose.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Compose.swift */; };
		OBJ_41 /* Concat.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* Concat.swift */; };
		OBJ_42 /* Curry.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Curry.swift */; };
		OBJ_43 /* Flip.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Flip.swift */; };
		OBJ_44 /* KeyPath.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* KeyPath.swift */; };
		OBJ_45 /* Optional.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Optional.swift */; };
		OBJ_46 /* Pipe.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Pipe.swift */; };
		OBJ_47 /* Sequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Sequence.swift */; };
		OBJ_48 /* With.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* With.swift */; };
		OBJ_49 /* Zurry.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Zurry.swift */; };
		OBJ_56 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_67 /* ChainTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* ChainTests.swift */; };
		OBJ_68 /* ComposeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* ComposeTests.swift */; };
		OBJ_69 /* ConcatTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* ConcatTests.swift */; };
		OBJ_70 /* CurryTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* CurryTests.swift */; };
		OBJ_71 /* PipeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* PipeTests.swift */; };
		OBJ_72 /* WithTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* WithTests.swift */; };
		OBJ_74 /* Overture.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Overture::Overture::Product" /* Overture.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		DC25ED00207ABC410088AF74 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Overture::Overture";
			remoteInfo = Overture;
		};
		DC25ED01207ABC410088AF74 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Overture::OvertureTests";
			remoteInfo = OvertureTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_11 /* Chain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Chain.swift; sourceTree = "<group>"; };
		OBJ_12 /* Compose.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Compose.swift; sourceTree = "<group>"; };
		OBJ_13 /* Concat.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Concat.swift; sourceTree = "<group>"; };
		OBJ_14 /* Curry.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Curry.swift; sourceTree = "<group>"; };
		OBJ_15 /* Flip.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Flip.swift; sourceTree = "<group>"; };
		OBJ_16 /* KeyPath.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyPath.swift; sourceTree = "<group>"; };
		OBJ_17 /* Optional.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Optional.swift; sourceTree = "<group>"; };
		OBJ_18 /* Pipe.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Pipe.swift; sourceTree = "<group>"; };
		OBJ_19 /* Sequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Sequence.swift; sourceTree = "<group>"; };
		OBJ_20 /* With.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = With.swift; sourceTree = "<group>"; };
		OBJ_21 /* Zurry.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Zurry.swift; sourceTree = "<group>"; };
		OBJ_24 /* ChainTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ChainTests.swift; sourceTree = "<group>"; };
		OBJ_25 /* ComposeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ComposeTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* ConcatTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConcatTests.swift; sourceTree = "<group>"; };
		OBJ_27 /* CurryTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CurryTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* PipeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PipeTests.swift; sourceTree = "<group>"; };
		OBJ_29 /* WithTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WithTests.swift; sourceTree = "<group>"; };
		OBJ_30 /* Overture.xcworkspace */ = {isa = PBXFileReference; lastKnownFileType = wrapper.workspace; path = Overture.xcworkspace; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_8 /* Development.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Development.xcconfig; sourceTree = "<group>"; };
		"Overture::Overture::Product" /* Overture.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Overture.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Overture::OvertureTests::Product" /* OvertureTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = OvertureTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_50 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_73 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_74 /* Overture.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* Overture */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* Chain.swift */,
				OBJ_12 /* Compose.swift */,
				OBJ_13 /* Concat.swift */,
				OBJ_14 /* Curry.swift */,
				OBJ_15 /* Flip.swift */,
				OBJ_16 /* KeyPath.swift */,
				OBJ_17 /* Optional.swift */,
				OBJ_18 /* Pipe.swift */,
				OBJ_19 /* Sequence.swift */,
				OBJ_20 /* With.swift */,
				OBJ_21 /* Zurry.swift */,
			);
			name = Overture;
			path = Sources/Overture;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_22 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* OvertureTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* OvertureTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* ChainTests.swift */,
				OBJ_25 /* ComposeTests.swift */,
				OBJ_26 /* ConcatTests.swift */,
				OBJ_27 /* CurryTests.swift */,
				OBJ_28 /* PipeTests.swift */,
				OBJ_29 /* WithTests.swift */,
			);
			name = OvertureTests;
			path = Tests/OvertureTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_31 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Overture::OvertureTests::Product" /* OvertureTests.xctest */,
				"Overture::Overture::Product" /* Overture.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Configs */,
				OBJ_9 /* Sources */,
				OBJ_22 /* Tests */,
				OBJ_30 /* Overture.xcworkspace */,
				OBJ_31 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Configs */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Development.xcconfig */,
			);
			name = Configs;
			sourceTree = "<group>";
		};
		OBJ_9 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_10 /* Overture */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Overture::Overture" /* Overture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_35 /* Build configuration list for PBXNativeTarget "Overture" */;
			buildPhases = (
				OBJ_38 /* Sources */,
				OBJ_50 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Overture;
			productName = Overture;
			productReference = "Overture::Overture::Product" /* Overture.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Overture::OvertureTests" /* OvertureTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_63 /* Build configuration list for PBXNativeTarget "OvertureTests" */;
			buildPhases = (
				OBJ_66 /* Sources */,
				OBJ_73 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_75 /* PBXTargetDependency */,
			);
			name = OvertureTests;
			productName = OvertureTests;
			productReference = "Overture::OvertureTests::Product" /* OvertureTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Overture::SwiftPMPackageDescription" /* OverturePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_52 /* Build configuration list for PBXNativeTarget "OverturePackageDescription" */;
			buildPhases = (
				OBJ_55 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OverturePackageDescription;
			productName = OverturePackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Overture" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_31 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Overture::Overture" /* Overture */,
				"Overture::SwiftPMPackageDescription" /* OverturePackageDescription */,
				"Overture::OverturePackageTests::ProductTarget" /* OverturePackageTests */,
				"Overture::OvertureTests" /* OvertureTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_38 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_39 /* Chain.swift in Sources */,
				OBJ_40 /* Compose.swift in Sources */,
				OBJ_41 /* Concat.swift in Sources */,
				OBJ_42 /* Curry.swift in Sources */,
				OBJ_43 /* Flip.swift in Sources */,
				OBJ_44 /* KeyPath.swift in Sources */,
				OBJ_45 /* Optional.swift in Sources */,
				OBJ_46 /* Pipe.swift in Sources */,
				OBJ_47 /* Sequence.swift in Sources */,
				OBJ_48 /* With.swift in Sources */,
				OBJ_49 /* Zurry.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_55 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_56 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_66 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_67 /* ChainTests.swift in Sources */,
				OBJ_68 /* ComposeTests.swift in Sources */,
				OBJ_69 /* ConcatTests.swift in Sources */,
				OBJ_70 /* CurryTests.swift in Sources */,
				OBJ_71 /* PipeTests.swift in Sources */,
				OBJ_72 /* WithTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Overture::OvertureTests" /* OvertureTests */;
			targetProxy = DC25ED01207ABC410088AF74 /* PBXContainerItemProxy */;
		};
		OBJ_75 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Overture::Overture" /* Overture */;
			targetProxy = DC25ED00207ABC410088AF74 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_36 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Development.xcconfig */;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Overture.xcodeproj/Overture_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Overture;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Overture;
			};
			name = Debug;
		};
		OBJ_37 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Development.xcconfig */;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Overture.xcodeproj/Overture_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Overture;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Overture;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_54 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_59 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
			};
			name = Debug;
		};
		OBJ_60 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
			};
			name = Release;
		};
		OBJ_64 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Development.xcconfig */;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Overture.xcodeproj/OvertureTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = OvertureTests;
			};
			name = Debug;
		};
		OBJ_65 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = OBJ_8 /* Development.xcconfig */;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Overture.xcodeproj/OvertureTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = OvertureTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Overture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_35 /* Build configuration list for PBXNativeTarget "Overture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_36 /* Debug */,
				OBJ_37 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_52 /* Build configuration list for PBXNativeTarget "OverturePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_53 /* Debug */,
				OBJ_54 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_58 /* Build configuration list for PBXAggregateTarget "OverturePackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_59 /* Debug */,
				OBJ_60 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_63 /* Build configuration list for PBXNativeTarget "OvertureTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_64 /* Debug */,
				OBJ_65 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
